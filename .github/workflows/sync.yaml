---
name: sync

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install skopeo
        run: |
          VERSION="1.1.0"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          sudo mv oras-install/oras /usr/local/bin/
          rm -rf oras_${VERSION}_*.tar.gz oras-install/

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      - name: Get changed files
        run: |
          FILE=$(git diff --name-only HEAD~1)
          
          if [ -z "$FILE" ]; then
            echo "No rules file changed"
            exit 0
          else
              while IFS= read -r line; do
                echo $line
                if [[ $line == *"=>"* ]]; then
                    src=$(echo "$line" | awk -F "=>" '{print $1}' | awk '{$1=$1};1')
                    dst=$(echo "$line" | awk -F "=>" '{print $2}' | awk '{$1=$1};1' | tr -d '\n' | tr -d '\r')
                    echo "oras copy ${src} ${dst} --to-username ${{ secrets.DOCKERHUB_USERNAME }} --to-password ${{ secrets.DOCKERHUB_PASSWORD }}"
                    oras copy  ${src} ${dst} --to-username ${{ secrets.DOCKERHUB_USERNAME }} --to-password ${{ secrets.DOCKERHUB_PASSWORD }}
                fi
              done < "$FILE"
          fi

      - name: Send WeChat Notification
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          STATUS: ${{ job.status }}
        run: |
          FILE=$(git diff --name-only HEAD~1)
          id=$(echo "$FILE" | awk -F "/" '{print $2}' | awk '{$1=$1};1')
          if [[ $STATUS == 'success' ]]; then
             message="[issue$id](https://github.com/CloudNativeTools/automated-scripts/issues/$id) 镜像已同步"
          else
             message="[issue$id](https://github.com/CloudNativeTools/automated-scripts/issues/$id) 镜像同步失败"
          fi
          curl "${WECHAT_WEBHOOK}" \
              -H 'Content-Type: application/json' \
              -d '
              {
                  "msgtype": "markdown",
                  "markdown": {
                    "content": "'"$message"'"
                  }
              }'

